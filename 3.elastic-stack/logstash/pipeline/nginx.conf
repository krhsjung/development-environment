input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/usr/share/logstash/certs/logstash/logstash.crt"
    ssl_key => "/usr/share/logstash/certs/logstash/logstash.key"
  }
}

filter {
    # ruby {
    #     code => 'puts "📌 로그 필터 통과 중: #{event.to_hash}"'
    # }
    if "access.log" in [log][file][path] {
        # 아래의 mutate 사용한 것과 동일
        # ruby {
        #     code => '
        #         t = Time.at(event.get("@timestamp").to_f)
        #         event.set("[@metadata][target_index]", "nginx-access-" + t.strftime("%Y.%m.%d"))
        #     '
        # }
        mutate {
            add_field => { "[@metadata][target_index]" => "nginx-access-%{+YYYY.MM.dd}" }
        }
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
    }

    if "error.log" in [log][file][path] {
        mutate {
            add_field => { "[@metadata][target_index]" => "nginx-error-%{+YYYY.MM.dd}" }
        }
        grok {
            match => { "message" => "\[%{HTTPDATE:timestamp}\] \[%{DATA:loglevel}\] %{GREEDYDATA:errormessage}" }
        }
    }

    mutate {
        remove_field => ["host", "agent", "ecs", "input", "[log][file][path]"]
    }
}

output {
    # 수신한 이벤트를 표준 출력으로 출력합니다.
    stdout { codec => rubydebug }

    elasticsearch {
        hosts => ["https://elasticsearch:9200"]
        index => "%{[@metadata][target_index]}"
        user => "${ELASTIC_USER}"
        password => "${ELASTIC_PASSWORD}"
        ssl => true
        cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
}

